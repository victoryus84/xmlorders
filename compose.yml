version: '3.8'

services:

  db_app:
    container_name: pg_${PROJECT_NAME}
    build:
      context: ./postgres
      dockerfile: Dockerfile.postgres
    ports:
      - "${PGSQL_PORT}:${PGSQL_PORT}"
    environment:
      - POSTGRES_DB=${PGSQL_DATABASE}
      - POSTGRES_USER=${PGSQL_USER}
      - POSTGRES_PASSWORD=${PGSQL_PASS}
    volumes:
      - "./shared/db/data:/var/lib/postgresql/data"
      - "./shared/db/backup:/home:rw"
      - "./postgres/scripts/01_create_extensions.sql:/docker-entrypoint-initdb.d/01_create_extensions.sql"
    networks:
      - default
    restart: always

  web:
    container_name: web_${PROJECT_NAME}
    build:
      context: ./backend
      dockerfile: Dockerfile.django
    env_file:
        - ./.env
    volumes:
      - ./backend:/app
    networks:
      - default
    depends_on:
      - db_app
    restart: "no"

  vue:
    container_name: front_${PROJECT_NAME}
    build:
      context: ./frontend
      dockerfile: Dockerfile.vue
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
    networks:
      - default
    restart: always

  nginx:
    container_name: nginx_${PROJECT_NAME}
    build:
      context: ./nginx
      dockerfile: Dockerfile.nginx
    ports:
      - "${NGINX_PORT_IN}:${NGINX_PORT_OUT}"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/static:/app/staticfiles
    networks:
      - default
    depends_on:
      - vue

  pgadmin:
    container_name: pga_${PROJECT_NAME}
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - "./shared/pgadmin:/var/lib/pgadmin"
    networks:
      - default
    restart: unless-stopped
    depends_on:
      - db_app 